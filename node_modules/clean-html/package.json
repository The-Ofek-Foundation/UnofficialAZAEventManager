{
  "name": "clean-html",
  "version": "1.3.5",
  "description": "HTML cleaner and beautifier",
  "main": "index.js",
  "bin": {
    "clean-html": "cmd.js"
  },
  "dependencies": {
    "htmlparser2": "3.8.2",
    "minimist": "1.1.1"
  },
  "devDependencies": {},
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:Pajamaman/clean-html.git"
  },
  "keywords": [
    "beautify",
    "clean",
    "html",
    "pretty",
    "tidy"
  ],
  "author": {
    "name": "Pajamaman",
    "email": "Pajamaman@users.noreply.github.com",
    "url": "http://github.com/Pajamaman"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/Pajamaman/clean-html/issues"
  },
  "homepage": "https://github.com/Pajamaman/clean-html",
  "readme": "## HTML cleaner and beautifier\n\n[![NPM Stats](https://nodei.co/npm/clean-html.png?downloads=true&downloadRank=true)](https://npmjs.org/packages/clean-html/)\n\nDo you have crappy HTML? I do!\n\n```html\n<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n        <tr>\n          <td height=\"31\"><b>Currently we have these articles available:</b>\n\n        <blockquote>\n              <p><a href=\"foo.html\">The History of Foo</a><br />    \n                An <span color=\"red\">informative</span> piece  of <FONT FACE=\"ARIAL\">information</FONT>.</p>\n              <p><a href=\"bar.html\">A Horse Walked Into a Bar</a><br/> The bartender said\n                \"Why the long face?\"</p>\n\t</blockquote>\n          </td>\n        </tr>\n      </table>\n```\n\nJust look at those blank lines and random line breaks, trailing spaces, mixed tabs, deprecated tags - it's outrageous!\n\nLet's clean it up:\n\n```javascript\nvar cleaner = require('clean-html'),\n    fs = require('fs'),\n    filename = process.argv[2];\n\nfs.readFile(filename, function (err, data) {\n    cleaner.clean(data, function (html) {\n        console.log(html);\n    });\n});\n```\n\nRunning this script on the file above produces the following output:\n\n```html\n<table>\n  <tr>\n    <td>\n      <b>Currently we have these articles available:</b>\n      <blockquote>\n        <p>\n          <a href=\"foo.html\">The History of Foo</a>\n          <br>\n          An <span>informative</span> piece of information.\n        </p>\n        <p>\n          <a href=\"bar.html\">A Horse Walked Into a Bar</a>\n          <br>\n          The bartender said \"Why the long face?\"\n        </p>\n      </blockquote>\n    </td>\n  </tr>\n</table>\n```\n\nYou can pass additional options to the `clean` function like this:\n\n```javascript\nvar options = {\n    'add-remove-tags': ['table', 'tr', 'td', 'blockquote']\n};\n\ncleaner.clean(data, options, function (html) {\n    console.log(html);\n});\n```\n\nIn this case, it produces:\n\n```html\n<b>Currently we have these articles available:</b>\n<p>\n  <a href=\"foo.html\">The History of Foo</a>\n  <br>\n  An <span>informative</span> piece of information.\n</p>\n<p>\n  <a href=\"bar.html\">A Horse Walked Into a Bar</a>\n  <br>\n  The bartender said \"Why the long face?\"\n</p>\n```\n\nSanity restored!\n\n## Options\n\n### break-around-comments\n\nAdds line breaks before and after comments.\n\nType: Boolean  \nDefault: `true`\n\n### break-around-tags\n\nTags that should have line breaks added before and after.\n\nType: Array  \nDefault: `['blockquote', 'br', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'p', 'table', 'td', 'tr']`\n\n### indent\n\nThe string to use for indentation. e.g., a tab character or one or more spaces.\n\nType: String  \nDefault: `'  '` (two spaces)\n\n### remove-attributes\n\nAttributes to remove from markup.\n\nType: Array  \nDefault: `['align', 'bgcolor', 'border', 'cellpadding', 'cellspacing', 'color', 'height', 'target', 'valign', 'width']`\n\n### remove-comments\n\nRemoves comments.\n\nType: Boolean  \nDefault: `false`\n\n### remove-empty-tags\n\nTags to remove from markup if empty.\n\nType: Array  \nDefault: `[]`\n\n### remove-tags\n\nTags to always remove from markup. Nested content is preserved.\n\nType: Array  \nDefault: `['center', 'font']`\n\n### replace-nbsp\n\nReplaces non-breaking white space entities (`&nbsp;`) with regular spaces.\n\nType: Boolean  \nDefault: `false`\n\n### wrap\n\nThe column number where lines should wrap. Set to 0 to disable line wrapping.\n\nType: Integer  \nDefault: `120`\n\n## Adding values to option lists\n\nThese options exist for your convenience.\n\n### add-break-around-tags\n\nAdditional tags to include in `break-around-tags`.\n\nType: Array  \nDefault: `null`\n\n### add-remove-attributes\n\nAdditional attributes to include in `remove-attributes`.\n\nType: Array  \nDefault: `null`\n\n### add-remove-tags\n\nAdditional tags to include in `remove-tags`.\n\nType: Array  \nDefault: `null`\n\n## Global installation\n\nIf this package is installed globally, it can be used from the command line:\n\n```bash\n$ cat crappy.html | clean-html\n```\n\nInstead of piping the input from another program, you can supply a filename as the first argument:\n\n```bash\n$ clean-html crappy.html\n```\n\nYou can redirect the output to another file:\n\n```bash\n$ clean-html crappy.html > clean.html\n```\n\nOr you can edit the file in place:\n\n```bash\n$ clean-html crappy.html --in-place\n```\n\nAll of the options above can be used from the command line. Array option values should be separated by commas:\n\n```bash\n$ clean-html crappy.html --add-remove-tags b,i,u\n```\n\nBoolean options can be set to true like this:\n\n```bash\n$ clean-html crappy.html --remove-comments\n```\n\nOr like this\n\n```bash\n$ clean-html crappy.html --remove-comments true\n```\n\nThey can be set to false like this:\n\n```bash\n$ clean-html crappy.html --remove-comments false\n```\n",
  "readmeFilename": "readme.md",
  "_id": "clean-html@1.3.5",
  "_from": "clean-html@"
}
